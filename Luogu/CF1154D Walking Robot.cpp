/*
算法：贪心+模拟
在走一段路程的时候，

可以选择消耗普通电池，也可以选择消耗充电电池

选择不同的电池，对后续都会有影响

则 在选择电池的策略上，需要用到贪心的思想。

具体怎么贪：

当两个电池 非都没有电 ，且 未到终点 时，前进。

对于某一条线段：

  如果当前线段 不能被阳光照到：

    若充电电池有电，选择消耗充电电池

	否则，选择消耗普通电池

  如果当前线段 能被阳光照到 ：

	如果充电电池电量已满，选择消耗充电电池

	否则，若普通电池有电，选择普通电池，并使充电电池电量加 1 。

按照上述策略，将整个数轴扫一遍。

最后输出 所在点的编号 即可
*/
#include<cstdio>
using namespace std;
int n,b,a;
int map[10000010];
int main()
{
	scanf("%d%d%d",&n,&b,&a);
	for(int i=1;i<=n;i++)
	  scanf("%d",&map[i]);
	int i=0;
	int b1=b,a1=a;
	while( (a1 || b1) && i++ <=n)
	  {
	  	if(map[i]==0)
	  	  if(a1)  a1--;
	  	  else  b1--;
		if(map[i]==1)
		  if(b1 && a1<a) b1--,a1++;
		    else a1--;
		if(i==n) break;
	  }
	printf("%d",i);
}
